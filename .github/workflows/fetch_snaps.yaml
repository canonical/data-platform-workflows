# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.


on:
  workflow_call:
    inputs:
      path-to-snaps-file:
        description: Relative path to snaps yaml file from repository directory
        required: true
        type: string
      path-to-bundle-file:
        description: Relative path to bundle file from repository directory
        required: true
        type: string
      reviewers:
        description: Comma separated list of GitHub usernames to request to review pull request (e.g. "canonical/data-platform-engineers,octocat")
        required: false
        type: string
    secrets:
      token:
        description: |
          GitHub App token or personal access token (not GITHUB_TOKEN)

          Permissions needed for App token:
          - Access: Read & write for Repository permissions: Pull requests
          - Access: Read & write for Repository permissions: Contents
          - If GitHub team is requested for pull request review,
            Access: Read-only for Organization permissions: Members

          Permissions needed for personal access token: write access to repository, read:org
          Personal access tokens with fine grained access are not supported (by GraphQL API, which is used by GitHub CLI).

          The GITHUB_TOKEN can create a pull request or push a branch, but `on: pull_request` workflows will not be triggered.

          Source: https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs
        required: true

jobs:
  test-deploy-bundle:
    name: Test deploy bundle
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: canonical/data-platform-workflows
          file-name: fetch_snaps.yaml
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install CLI
        run: pipx install git+https://github.com/canonical/data-platform-workflows@'${{ steps.workflow-version.outputs.sha }}'#subdirectory=python/cli
      - name: Free up disk space
        timeout-minutes: 1
        run: |
          printf '\nDisk usage before cleanup\n'
          df --human-readable
          # Based on https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
          rm -r /usr/share/dotnet
          rm -r /opt/hostedtoolcache/
          printf '\nDisk usage after cleanup\n'
          df --human-readable
      - name: Set up environment
        timeout-minutes: 60
        run: |
          # `--classic` applies to juju 2 snap; ignored for juju 3 snap
          sudo snap install juju --classic --channel='3.4/stable'
          sudo snap refresh lxd --channel='latest/stable'
          sudo adduser "$USER" 'lxd'
          # `newgrp` does not work in GitHub Actions; use `sg` instead
          sg 'lxd' -c "lxd waitready"
          sg 'lxd' -c "lxd init --auto"
          sg 'lxd' -c "lxc network set lxdbr0 ipv6.address none"
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT
          # shellcheck disable=SC2193
          # (shellcheck sees it as constant, but GitHub Actions expression is not constant between workflow runs)
          sg 'lxd' -c "lxc image copy ubuntu:82b997ec581b local: --alias 'juju/ubuntu@22.04/amd64'"
          mkdir -p ~/.local/share/juju  # Workaround for juju 3 strict snap
          sg 'lxd' -c "juju bootstrap 'lxd' --config model-logs-size=10G '--agent-version=3.4.5'"
          juju model-defaults logging-config='<root>=INFO; unit=DEBUG'
          juju add-model test
          juju set-model-constraints arch='amd64'
          sg 'lxd' -c "lxc image list"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}
      - name: Deploy bundle and fetch snaps
        id: update-file
        timeout-minutes: 60
        run: |
          juju deploy '${{ inputs.path-to-bundle-file }}'
          sleep 600 # time to allow the bundle to settle
          juju status
          juju exec --all --output snaps.txt -- snap list
          cat ./snaps.txt
          output_table=$(cat ./snaps.txt | awk '! /^[0-9]/ && $1 != "Name" { print $1, $3, $4 }' | sort | uniq)
          canonical_livepatch=$(snap info canonical-livepatch | awk '/^channels:/ {found=1; next} found && $1 != "" {print $1, $4; exit}')
          generate-snaps-yaml "$output_table" "$canonical_livepatch" "'${{ inputs.path-to-snaps-file }}'"
          cat '${{ inputs.path-to-snaps-file }}'
      - name: Push `update-snaps` branch
        if: ${{ fromJSON(steps.update-file.outputs.updates_available) }}
        run: |
          git checkout -b update-snaps
          git add '${{ inputs.path-to-snaps-file }}'
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Update bundle snaps"
          # Uses token set in checkout step
          git push origin update-snaps -f
      - name: Create pull request
        if: ${{ fromJSON(steps.update-file.outputs.updates_available) }}
        run: |
          # Capture output in variable so that step fails if `gh pr list` exits with non-zero code
          prs=$(gh pr list --head update-snaps --state open --json number)
          if [[ $prs != "[]" ]]
          then
            echo Open pull request already exists
            exit 0
          fi
          gh pr create --head update-snaps --title "Update bundle snaps" --body "Update snap revisions in snap YAML file"
        env:
          GH_TOKEN: ${{ secrets.token }}
