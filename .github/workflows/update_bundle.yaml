# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

# Usage documentation: update_bundle.md

on:
  workflow_call:
    inputs:
      path-to-bundle-file:
        description: Relative path to bundle file from repository directory
        required: true
        type: string
      reviewers:
        description: Comma separated list of GitHub usernames to request to review pull request (e.g. "canonical/data-platform-engineers,octocat")
        required: false
        type: string
      exclude:
        description: Comma separated list of applications to not update
        required: false
        type: string
    secrets:
      token:
        description: |
          GitHub App token or personal access token (not GITHUB_TOKEN)

          Permissions needed for App token:
          - Access: Read & write for Repository permissions: Pull requests
          - Access: Read & write for Repository permissions: Contents
          - If GitHub team is requested for pull request review,
            Access: Read-only for Organization permissions: Members

          Permissions needed for personal access token: write access to repository, read:org
          Personal access tokens with fine grained access are not supported (by GraphQL API, which is used by GitHub CLI).

          The GITHUB_TOKEN can create a pull request or push a branch, but `on: pull_request` workflows will not be triggered.

          Source: https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs
        required: true

jobs:
  get-workflow-version:
    name: Get workflow version
    uses: ./.github/workflows/_get_workflow_version.yaml
    with:
      repository-name: canonical/data-platform-workflows
      file-name: update_bundle.yaml

  update-bundle:
    name: Update bundle
    needs:
      - get-workflow-version
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Install CLI
        run: pipx install git+https://github.com/canonical/data-platform-workflows@"${{ needs.get-workflow-version.outputs.version }}"#subdirectory=python/cli
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.token }}
      - name: Update bundle file
        id: update-file
        run: |
          CMD="update-bundle ${{ inputs.path-to-bundle-file }}"
          
          if [ -n "${{ inputs.include }}" ]; then CMD="${CMD} --include ${{ inputs.include }}"; fi
          
          if [ -n "${{ inputs.exclude }}" ]; then CMD="${CMD} --exclude ${{ inputs.exclude }}"; fi
          
          echo "Executing command $CMD"
          
          ${CMD}
      - name: Push `update-bundle` branch
        if: ${{ fromJSON(steps.update-file.outputs.updates_available) }}
        run: |
          git checkout -b update-bundle
          git add '${{ inputs.path-to-bundle-file }}'
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Update bundle"
          # Uses token set in checkout step
          git push origin update-bundle -f
      - name: Create pull request
        if: ${{ fromJSON(steps.update-file.outputs.updates_available) }}
        run: |
          # Capture output in variable so that step fails if `gh pr list` exits with non-zero code
          prs=$(gh pr list --head update-bundle --state open --json number)
          if [[ $prs != "[]" ]]
          then
            echo Open pull request already exists
            exit 0
          fi
          gh pr create --head update-bundle --title "Update bundle" --body "Update charm revisions in bundle YAML file" --reviewer '${{ inputs.reviewers }}'
        env:
          GH_TOKEN: ${{ secrets.token }}
