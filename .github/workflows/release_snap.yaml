# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

# Usage documentation: release_snap.md

on:
  workflow_call:
    inputs:
      channel:
        description: Snap Store channel to release to
        required: true
        type: string
      artifact-prefix:
        description: |
          Prefix for snap package GitHub artifact(s)

          Use canonical/data-platform-workflows build_snap.yaml to build the snap(s)
        required: true
        type: string
      path-to-snap-project-directory:
        description: |
          Relative path to snap project directory from repository directory

          The "snap project directory" is the directory that contains the `snap` directory, not the `snap` directory itself.
        default: .
        type: string
      create-github-release:
        description: Create git tag & GitHub release
        default: true
        type: boolean
      snapcraft-snap-revision:
        description: snapcraft snap revision
        required: false
        type: string
      snapcraft-snap-channel:
        description: |
          snapcraft snap channel

          Cannot be used if `snapcraft-snap-revision` input is passed
        required: false
        type: string
    secrets:
      snap-store-token:
        description: Snap Store login token
        required: true

jobs:
  release-snap:
    name: Release snap
    needs:
      - get-workflow-version
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: canonical/data-platform-workflows
          file-name: release_snap.yaml
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install CLI
        run: pipx install git+https://github.com/canonical/data-platform-workflows@'${{ steps.workflow-version.outputs.sha }}'#subdirectory=python/cli
      - name: Parse snapcraft version inputs
        id: snapcraft-snap-version
        run: parse-snap-version --revision='${{ inputs.snapcraft-snap-revision }}' --channel='${{ inputs.snapcraft-snap-channel }}' --revision-input-name=snapcraft-snap-revision --channel-input-name=snapcraft-snap-channel
      - name: Install snapcraft
        run: sudo snap install snapcraft --classic ${{ steps.snapcraft-snap-version.outputs.install_flag }}
      - run: snap list
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download snap package(s)
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifact-prefix }}-*
          merge-multiple: true
      - name: Upload & release snap
        id: release
        run: release-snap --directory='${{ inputs.path-to-snap-project-directory }}' --channel='${{ inputs.channel }}'
        env:
          SNAPCRAFT_STORE_AUTH: candid
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.snap-store-token }}
      - name: Upload snapcraft logs
        if: ${{ failure() && steps.release.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-snapcraft-release-${{ inputs.artifact-prefix }}
          path: ~/.local/state/snapcraft/log/
          if-no-files-found: error
      - name: Create GitHub release
        if: ${{ inputs.create-github-release }}
        run: |
          git tag '${{ steps.release.outputs.release_tag }}'
          git push origin '${{ steps.release.outputs.release_tag }}'
          gh release create '${{ steps.release.outputs.release_tag }}' --verify-tag --generate-notes --title '${{ steps.release.outputs.release_title }}' --notes-file release_notes.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
