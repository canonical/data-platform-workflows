# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

# Usage documentation: build_snap.md

on:
  workflow_call:
    inputs:
      artifact-prefix:
        description: Snap packages are uploaded to GitHub artifacts beginning with this prefix
        default: packed-snap
        type: string
      path-to-snap-project-directory:
        description: |
          Relative path to snap project directory from repository directory

          The "snap project directory" is the directory that contains the `snap` directory, not the `snap` directory itself.
        default: .
        type: string
      snapcraft-snap-revision:
        description: snapcraft snap revision
        required: false
        type: string
      snapcraft-snap-channel:
        description: |
          snapcraft snap channel

          Cannot be used if `snapcraft-snap-revision` input is passed
        required: false
        type: string
    outputs:
      artifact-prefix:
        description: Snap packages are uploaded to GitHub artifacts beginning with this prefix
        value: ${{ jobs.collect-bases.outputs.artifact-prefix-with-inputs }}

jobs:
  collect-bases:
    name: Collect architectures for snap | ${{ inputs.path-to-snap-project-directory }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: canonical/data-platform-workflows
          file-name: build_snap.yaml
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install CLI
        run: pipx install git+https://github.com/canonical/data-platform-workflows@'${{ steps.workflow-version.outputs.sha }}'#subdirectory=python/cli
      - name: Checkout
        uses: actions/checkout@v4
      - name: Collect snap architectures to build from snapcraft.yaml
        id: collect
        run: collect-snap-bases --directory='${{ inputs.path-to-snap-project-directory }}'
    outputs:
      bases: ${{ steps.collect.outputs.bases }}
      artifact-prefix-with-inputs: ${{ inputs.artifact-prefix || steps.collect.outputs.default_prefix }}

  build:
    strategy:
      matrix:
        base: ${{ fromJSON(needs.collect-bases.outputs.bases) }}
    name: 'Build snap | ${{ matrix.base.id }}'
    needs:
      - collect-bases
    runs-on: ${{ matrix.base.runner }}
    timeout-minutes: 15
    steps:
      - name: (GitHub-hosted ARM runner) Install pipx
        if: ${{ matrix.base.runner == 'Ubuntu_ARM64_4C_16G_01' }}
        run: |
          sudo apt-get update
          sudo apt-get install python3-pip python3-venv -y
          python3 -m pip install pipx
          python3 -m pipx ensurepath
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: canonical/data-platform-workflows
          file-name: build_snap.yaml
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install CLI
        run: pipx install git+https://github.com/canonical/data-platform-workflows@'${{ steps.workflow-version.outputs.sha }}'#subdirectory=python/cli
      - name: Parse snapcraft version inputs
        id: snapcraft-snap-version
        run: parse-snap-version --revision='${{ inputs.snapcraft-snap-revision }}' --channel='${{ inputs.snapcraft-snap-channel }}' --revision-input-name=snapcraft-snap-revision --channel-input-name=snapcraft-snap-channel
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up environment
        run: |
          sudo adduser "$USER" lxd
          # `newgrp` does not work in GitHub Actions; use `sg` instead
          sg lxd -c "lxd waitready"
          sg lxd -c "lxd init --auto"
          # Workaround for Docker & LXD on same machine
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT

          sudo snap install snapcraft --classic ${{ steps.snapcraft-snap-version.outputs.install_flag }}
      - run: snap list
      - name: Pack snap
        id: pack
        working-directory: ${{ inputs.path-to-snap-project-directory }}
        run: sg lxd -c "snapcraft pack -v --build-for='${{ matrix.base.id }}'"
      - name: Upload snapcraft logs
        if: ${{ failure() && steps.pack.outcome == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-snapcraft-build-${{ inputs.artifact-prefix }}-architecture-${{ matrix.base.id }}
          path: ~/.local/state/snapcraft/log/
          if-no-files-found: error
      - run: touch .empty
      - name: Upload snap package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.collect-bases.outputs.artifact-prefix-with-inputs }}-architecture-${{ matrix.base.id }}
          # .empty file required to preserve directory structure
          # See https://github.com/actions/upload-artifact/issues/344#issuecomment-1379232156
          path: |
            ${{ inputs.path-to-snap-project-directory }}/*.snap
            .empty
          if-no-files-found: error
