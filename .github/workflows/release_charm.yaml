# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

# Usage documentation: release_charm.md

on:
  workflow_call:
    inputs:
      channel:
        description: Charmhub channel to release to
        required: true
        type: string
      artifact-prefix:
        description: |
          Prefix for charm package GitHub artifact(s)

          Use canonical/data-platform-workflows build_charm.yaml to build the charm(s)
        required: true
        type: string
      path-to-charm-directory:
        description: Relative path to charm directory from repository directory
        default: .
        type: string
      create-github-release:
        description: Create git tag(s) & GitHub release
        default: true
        type: boolean
      charmcraft-snap-revision:
        description: charmcraft snap revision
        required: false
        type: string
      charmcraft-snap-channel:
        description: |
          charmcraft snap channel

          Cannot be used if `charmcraft-snap-revision` input is passed
        required: false
        type: string
    secrets:
      charmhub-token:
        description: Charmhub login token
        required: true

jobs:
  release-charm:
    name: Release charm
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: canonical/data-platform-workflows
          file-name: release_charm.yaml
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install CLI
        run: pipx install git+https://github.com/canonical/data-platform-workflows@'${{ steps.workflow-version.outputs.sha }}'#subdirectory=python/cli
      - name: Parse charmcraft version inputs
        id: charmcraft-snap-version
        run: parse-snap-version --revision='${{ inputs.charmcraft-snap-revision }}' --channel='${{ inputs.charmcraft-snap-channel }}' --revision-input-name=charmcraft-snap-revision --channel-input-name=charmcraft-snap-channel
      - name: Install charmcraft
        run: sudo snap install charmcraft --classic ${{ steps.charmcraft-snap-version.outputs.install_flag }}
      - run: snap list
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get path in artifact
        id: path-in-artifact
        run: replace-invalid-artifact-characters '${{ inputs.path-to-charm-directory }}'
      - name: Download charm package(s)
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.artifact-prefix }}-${{ steps.path-in-artifact.outputs.artifact_string }}--platform-*
          merge-multiple: true
      - name: Upload & release charm
        id: release
        run: release-charm --directory='${{ inputs.path-to-charm-directory }}' --channel='${{ inputs.channel }}' --create-release='${{ inputs.create-github-release }}'
        env:
          CHARMCRAFT_AUTH: ${{ secrets.charmhub-token }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Charmcraft logs
        if: ${{ success() || (failure() && steps.release.outcome == 'failure') }}
        run: cat ~/.local/state/charmcraft/log/*
